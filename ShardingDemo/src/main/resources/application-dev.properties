spring.shardingsphere.datasource.names=ds0-master,ds0-slave0,ds1
spring.shardingsphere.datasource.ds0-master.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0-master.driver-class-name=com.p6spy.engine.spy.P6SpyDriver
spring.shardingsphere.datasource.ds0-master.jdbc-url=jdbc:p6spy:mysql://my_db:5306/demo_ds0?serverTimezone=Hongkong&test=ds0-master
spring.shardingsphere.datasource.ds0-master.username=myUser
spring.shardingsphere.datasource.ds0-master.password=p
spring.shardingsphere.datasource.ds0-master.maximumPoolSize=3
spring.shardingsphere.datasource.ds0-master.maxLifetime=1500000
spring.shardingsphere.datasource.ds0-slave0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0-slave0.driver-class-name=com.p6spy.engine.spy.P6SpyDriver
spring.shardingsphere.datasource.ds0-slave0.jdbc-url=jdbc:p6spy:mysql://my_db:5306/demo_ds0?serverTimezone=Hongkong&test=ds0-slave0
spring.shardingsphere.datasource.ds0-slave0.username=myUser
spring.shardingsphere.datasource.ds0-slave0.password=p
spring.shardingsphere.datasource.ds0-slave0.maximumPoolSize=3
spring.shardingsphere.datasource.ds0-slave0.maxLifetime=1500000
spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.p6spy.engine.spy.P6SpyDriver
spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:p6spy:mysql://my_db:5306/demo_ds1?serverTimezone=Hongkong&test=ds1
spring.shardingsphere.datasource.ds1.username=myUser
spring.shardingsphere.datasource.ds1.password=p
spring.shardingsphere.datasource.ds1.maximumPoolSize=3
spring.shardingsphere.datasource.ds1.maxLifetime=1500000

# 绑定表
# (1)sharding-jdbc不支持跨库查询
#    https://shardingsphere.apache.org/document/legacy/4.x/document/cn/features/sharding/use-norms/sql
# (2)配置绑定表可以禁止同库的表关联出现笛卡尔积的查询
#    https://shardingsphere.apache.org/document/legacy/4.x/document/cn/features/sharding/concept/sql/#%E7%BB%91%E5%AE%9A%E8%A1%A8
spring.shardingsphere.sharding.binding-tables[0]=t_order,t_order_item
# 广播表，每个库中数据一样，多为字典表，查询随机读一个库，更新全部库
spring.shardingsphere.sharding.broadcast-tables[0]=t_dict
spring.shardingsphere.sharding.master-slave-rules.ds0.master-data-source-name=ds0-master
spring.shardingsphere.sharding.master-slave-rules.ds0.slave-data-source-names=ds0-slave0
# 默认数据源，未配置分片规则的表将通过默认数据源定位（如不配置，未配置分片规则表读、写都随机使用一个库）
spring.shardingsphere.sharding.default-data-source-name=ds0

# 默认分库策略，只能设置一种：standard,complex,inline,hint,none
# 同时满足以下两个条件触发
# 1.HintManager.getInstance().setDatabaseShardingValue(只分库,跳过SQL解析和改写阶段)或addDatabaseShardingValue
# 2.配置tables.<tableName>.actual-data-nodes
spring.shardingsphere.sharding.default-database-strategy.hint.algorithm-class-name=com.ozz.sharding.config.sharding.MyHintShardingAlgorithm
spring.shardingsphere.sharding.default-table-strategy.hint.algorithm-class-name=com.ozz.sharding.config.sharding.MyHintShardingAlgorithm
spring.shardingsphere.sharding.tables.t_hint_db_table.actual-data-nodes=ds$->{0..1}.t_order_$->{0..1}
spring.shardingsphere.sharding.tables.t_transaction.actual-data-nodes=ds$->{0..1}.t_transaction
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds$->{0..1}.t_order_$->{0..1}
spring.shardingsphere.sharding.tables.t_order.key-generator.column=order_id
spring.shardingsphere.sharding.tables.t_order.key-generator.props.worker.id=86
# UUID(UUID.randomUUID())、SNOWFLAKE(符号位(1bit)+时间戳位(41bit)+工作进程位(10bit)+序列号位(12bit))
spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.t_order.database-strategy.standard.precise-algorithm-class-name=com.ozz.sharding.config.sharding.MyDbStandardShardingAlgorithm
spring.shardingsphere.sharding.tables.t_order.database-strategy.standard.range-algorithm-class-name=com.ozz.sharding.config.sharding.MyDbStandardShardingAlgorithm
spring.shardingsphere.sharding.tables.t_order.database-strategy.standard.sharding-column=user_id
spring.shardingsphere.sharding.tables.t_order.table-strategy.standard.precise-algorithm-class-name=com.ozz.sharding.config.sharding.MyTableStandardShardingAlgorithm
spring.shardingsphere.sharding.tables.t_order.table-strategy.standard.range-algorithm-class-name=com.ozz.sharding.config.sharding.MyTableStandardShardingAlgorithm
spring.shardingsphere.sharding.tables.t_order.table-strategy.standard.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order_item.actual-data-nodes=ds$->{0..1}.t_order_item_$->{0..1}
spring.shardingsphere.sharding.tables.t_order_item.key-generator.column=order_item_id
spring.shardingsphere.sharding.tables.t_order_item.key-generator.props.worker.id=86
spring.shardingsphere.sharding.tables.t_order_item.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.t_order_item.database-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.t_order_item.database-strategy.inline.algorithm-expression=ds$->{user_id % 2}
spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item_$->{order_id % 2}
spring.datasource.dynamic.primary=myShardingDS
spring.datasource.dynamic.datasource.myDynamicDS.url=jdbc:p6spy:mysql://my_db:5306/demo_dsp?serverTimezone=Hongkong
spring.datasource.dynamic.datasource.myDynamicDS.username=myUser
spring.datasource.dynamic.datasource.myDynamicDS.password=p
spring.datasource.dynamic.datasource.myDynamicDS.driverClassName=com.p6spy.engine.spy.P6SpyDriver
spring.datasource.dynamic.datasource.myDynamicDS.hikari.maxLifetime=1500000
spring.datasource.dynamic.datasource.myDynamicDS.hikari.maxPoolSize=3
