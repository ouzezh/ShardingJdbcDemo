spring:
  shardingsphere:
    datasource:
      names: ds0-master,ds1-master,ds0-slave0,ds1-slave0
      ds0-master:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: net.sf.log4jdbc.DriverSpy
        jdbc-url: jdbc:log4jdbc:mysql://my_db:5306/demo_ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: myUser
        password: p
        maximumPoolSize: 3
        maxLifetime: 1800000
      ds0-slave0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: net.sf.log4jdbc.DriverSpy
        jdbc-url: jdbc:log4jdbc:mysql://my_db:5306/demo_ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: myUser
        password: p
        maximumPoolSize: 3
        maxLifetime: 1800000
      ds1-master:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: net.sf.log4jdbc.DriverSpy
        jdbc-url: jdbc:log4jdbc:mysql://my_db:5306/demo_ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: myUser
        password: p
        maximumPoolSize: 3
        maxLifetime: 1800000
      ds1-slave0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: net.sf.log4jdbc.DriverSpy
        jdbc-url: jdbc:log4jdbc:mysql://my_db:5306/demo_ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
        username: myUser
        password: p
        maximumPoolSize: 3
        maxLifetime: 1800000
    sharding:
      # 绑定表
      # (1)sharding-jdbc不支持跨库查询
      #    https://shardingsphere.apache.org/document/legacy/4.x/document/cn/features/sharding/use-norms/sql
      # (2)配置绑定表可以禁止同库音表关联出现笛卡尔积的查询
      #    https://shardingsphere.apache.org/document/legacy/4.x/document/cn/features/sharding/concept/sql/#%E7%BB%91%E5%AE%9A%E8%A1%A8
      binding-tables[0]: t_order,t_order_item
      broadcast-tables[0]: t_dict # 广播表，每个库中数据一样，多为字典表
      master-slave-rules:
        ds0:
          master-data-source-name: ds0-master
          slave-data-source-names: ds0-slave0
        ds1:
          master-data-source-name: ds1-master
          slave-data-source-names: ds1-slave0
      default-data-source-name: ds1 # 默认数据源，未配置分片规则的表将通过默认数据源定位
      # 默认分库策略，只能设置一种：standard,complex,inline,hint,none
      # 同时满足以下两个条件触发
      # 1.HintManager.getInstance().setDatabaseShardingValue(只分库,跳过SQL解析和改写阶段)或addDatabaseShardingValue
      # 2.配置tables.<tableName>.actual-data-nodes
      default-database-strategy:
        hint:
          algorithm-class-name: com.ozz.sharding.config.sharding.MyHintShardingAlgorithm
      default-table-strategy:
        hint:
          algorithm-class-name: com.ozz.sharding.config.sharding.MyHintShardingAlgorithm
      tables:
        t_test_hint: # 测试default-database-strategy.hint
          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}
        t_test_tx:
          actual-data-nodes: ds$->{0..1}.t_test_tx
        t_order:
          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}
          key-generator:
            column: order_id
            props.worker.id: 86
            type: SNOWFLAKE # UUID(UUID.randomUUID())、SNOWFLAKE(符号位(1bit)+时间戳位(41bit)+工作进程位(10bit)+序列号位(12bit))
          database-strategy:
            standard:
              precise-algorithm-class-name: com.ozz.sharding.config.sharding.MyDbStandardShardingAlgorithm
              range-algorithm-class-name: com.ozz.sharding.config.sharding.MyDbStandardShardingAlgorithm
              sharding-column: user_id
          table-strategy:
            standard:
              precise-algorithm-class-name: com.ozz.sharding.config.sharding.MyTableStandardShardingAlgorithm
              range-algorithm-class-name: com.ozz.sharding.config.sharding.MyTableStandardShardingAlgorithm
              sharding-column: order_id
        t_order_item:
          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}
          key-generator:
            column: order_item_id
            props.worker.id: 86
            type: SNOWFLAKE
          database-strategy:
            inline:
              sharding-column: user_id
              algorithm-expression: ds$->{user_id % 2}
          table-strategy:
            inline:
              sharding-column: order_id
              algorithm-expression: t_order_item_$->{order_id % 2}

